controller:
  name: controller
  image:
    repository: quay.io/kubernetes-ingress-controller/nginx-ingress-controller
    tag: "0.15.0"
    pullPolicy: IfNotPresent
  config: {}
  headers: {}
  hostNetwork: true
  dnsPolicy: ClusterFirst
  daemonset:
    useHostPort: false
    hostPorts:
      http: 80
      https: 443
  defaultBackendService: ""
  electionID: ingress-controller-leader
  ingressClass: nginx
  podLabels: {}
  publishService:
    enabled: false
    pathOverride: ""
  scope:
    enabled: false
    namespace: ""
  extraArgs: {}
  extraEnvs: []
  kind: DaemonSet
  updateStrategy: {}
  minReadySeconds: 0
  tolerations: []
  affinity: {}
  nodeSelector: {}
  livenessProbe:
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
    port: 10254
  readinessProbe:
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
    port: 10254
  podAnnotations: {}
  replicaCount: 1
  minAvailable: 1
  resources: {}
  autoscaling:
    enabled: false
  customTemplate:
    configMapName: ""
    configMapKey: ""
  service:
    annotations: {}
    labels: {}
    clusterIP: ""
    externalIPs: []
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    enableHttp: true
    enableHttps: true
    externalTrafficPolicy: ""
    healthCheckNodePort: 0
    targetPorts:
      http: http
      https: https
    type: NodePort
    nodePorts:
      http: ""
      https: ""
  extraContainers: {}
  extraVolumeMounts: {}
  extraVolumes: {}
  extraInitContainers: []
  stats:
    enabled: false
    service:
      annotations: {}
      clusterIP: ""
      externalIPs: []
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      servicePort: 18080
      type: ClusterIP
  metrics:
    enabled: false
    service:
      annotations: {}
      clusterIP: ""
      externalIPs: []
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      servicePort: 9913
      type: ClusterIP
  lifecycle: {}
revisionHistoryLimit: 10
defaultBackend:
  enabled: true
  name: default-backend
  image:
    repository: k8s.gcr.io/defaultbackend
    tag: "1.3"
    pullPolicy: IfNotPresent
  extraArgs: {}
  tolerations: []
  affinity: {}
  podLabels: {}
  nodeSelector: {}
  podAnnotations: {}
  replicaCount: 1
  minAvailable: 1
  resources: {}
  service:
    annotations: {}
    clusterIP: ""
    externalIPs: []
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    servicePort: 80
    type: ClusterIP
rbac:
  create: true
serviceAccount:
  create: true
  name: ingress
imagePullSecrets: []
tcp: {}
udp: {}
