kernel:
  image: linuxkit/kernel:5.0.5
  cmdline: "console=tty0 ipAddress=192.168.58.11 ipBroadcast=192.167.58.255 ipMask=24"
init:
  - kubernit/init:dev
  - kubernit/runc:dev
  - kubernit/containerd:dev
  - kubernit/ca-certificates:dev
onboot:
  - name: sysctl
    image: kubernit/sysctl:dev
    pid: "host"
    capabilities:
      - CAP_SYS_ADMIN
    binds:
      - /etc/sysctl.d/01-kubernetes.conf:/etc/sysctl.d/01-kubernetes.conf
    readonly: false
  - name: sysfs
    image: kubernit/sysfs:dev
    net: new
    ipc: new
  - name: dhcpcd
    image: kubernit/dhcpcd:dev
    binds:
      - /run/resolvconf:/etc
    capabilities:
      - CAP_NET_ADMIN
      - CAP_NET_BIND_SERVICE
      - CAP_NET_RAW
      - CAP_SYS_ADMIN
    command: ["/sbin/dhcpcd", "--nobackground", "-f", "/dhcpcd.conf", "-1"]
  - name: metadata
    image: kubernit/metadata:dev
    binds:
      - /dev:/dev
      - /var:/var
      - /run:/run
      - /sys:/sys
      - /etc/resolv.conf:/etc/resolv.conf
      - /etc/ssl/certs:/etc/ssl/certs
    tmpfs:
      - /tmp
    readonly: true
    capabilities:
      - CAP_SYS_ADMIN
      - CAP_NET_ADMIN
  - name: format
    image: kubernit/format:dev
    binds:
      - /dev:/dev
    capabilities:
      - CAP_SYS_ADMIN
      - CAP_MKNOD
    net: new
    ipc: new
  - name: mounts
    image: kubernit/mount:dev
    command: ["/usr/bin/mountie", "/var/lib/"]
    binds:
      - /dev:/dev
      - /var:/var:rshared,rbind
      - /:/hostroot
    capabilities:
      - CAP_SYS_ADMIN
    rootfsPropagation: shared
    net: new
    ipc: new
  - name: bridge
    image: busybox:latest
    command:
      - "/bin/sh"
      - "-c"
      - |
        set -e
        field() {
            local f=$1
            local d=$2
            if [ -r "/run/config/cni.bridge/$f" ] ; then
                cat "/run/config/cni.bridge/$f"
            else
                echo -e "\"$d\"\\n"
            fi
        }
        subnet="$(field subnet '10.1.0.0/16')"
        gateway="$(field gateway '10.1.0.1')"
        ns="$(field ns '10.1.0.1')"
        cat <<EOF >/var/lib/cni/conf/10-default.conflist
        {
          "cniVersion": "0.3.1",
          "name": "default",
          "plugins": [
            {
              "type": "bridge",
              "bridge": "cni0",
              "isDefaultGateway": true,
              "ipMasq": true,
              "hairpinMode": true,
              "ipam": {
                "type": "host-local",
                "subnet": $subnet,
                "gateway": $gateway
              },
              "dns": {
                "nameservers": [$ns]
              }
            },
            {
              "type": "portmap",
              "capabilities": {
                "portMappings": true
              },
              "snat": true
            }
          ]
        }
        EOF
        cat <<EOF >/var/lib/cni/conf/99-loopback.conf
        {
          "cniVersion": "0.2.0",
          "type": "loopback"
        }
        EOF
        if [ -r "/run/config/cni.bridge/debug-show-configs" ] ; then
            grep . /var/lib/cni/conf/*.conf /var/lib/cni/conf/*.conflist
        fi
    runtime:
      mkdir: ["/var/lib/cni/conf","/var/lib/cni/bin"]
    binds:
      - /var/lib:/var/lib
      - /run/config:/run/config
services:
  - name: getty
    image: kubernit/getty:dev
    env:
     - INSECURE=true
    cgroupsPath: systemreserved/getty
    pid: host
    net: host
    binds:
      - /etc/resolv.conf:/etc/resolv.conf
      - /run:/run
      - /tmp:/tmp
      - /etc:/hostroot/etc
      - /usr/bin/ctr:/usr/bin/ctr
      - /usr/bin/runc:/usr/bin/runc
      - /containers:/containers
      - /var/log:/var/log
      - /dev:/dev
      - /sys:/sys
    capabilities:
      - all
  - name: rngd
    image: kubernit/rngd:dev
    cgroupsPath: systemreserved/rngd
    capabilities:
      - CAP_SYS_ADMIN
    oomScoreAdj: -800
    readonly: true
    net: new
    ipc: new
  - name: ntpd
    image: kubernit/openntpd:dev
    cgroupsPath: systemreserved/ntpd
    binds:
      - /etc/resolv.conf:/etc/resolv.conf
    capabilities:
      - CAP_SYS_TIME
      - CAP_SYS_NICE
      - CAP_SYS_CHROOT
      - CAP_SETUID
      - CAP_SETGID
  - name: sshd
    image: kubernit/sshd:dev
    cgroupsPath: systemreserved/sshd
    pid: host
    binds:
      - /root/.ssh:/root/.ssh
      - /etc/resolv.conf:/etc/resolv.conf
      - /run:/run
      - /tmp:/tmp
      - /etc:/hostroot/etc
      - /usr/bin/ctr:/usr/bin/ctr
      - /usr/bin/runc:/usr/bin/runc
      - /containers:/containers
      - /var/log:/var/log
      - /dev:/dev
      - /sys:/sys
    capabilities:
      - all
  - name: kubelet
    image: kubernit/kubelet:dev
    cgroupsPath: podruntime/kubelet
    binds:
      - /tmp:/tmp
      - /dev:/dev
      - /etc/resolv.conf:/etc/resolv.conf
      - /etc/os-release:/etc/os-release
      - /etc/kubelet.sh.conf:/etc/kubelet.sh.conf
      - /run:/run:rshared,rbind
      - /var:/var:rshared,rbind
      - /var/lib/kubeadm:/etc/kubernetes
      - /etc/kubeadm:/etc/kubeadm
      - /var/lib/kubelet-plugins:/usr/libexec/kubernetes/kubelet-plugins:rshared,rbind
      - /var/lib/cni/conf:/etc/cni/net.d:rshared,rbind
      - /var/lib/cni/bin:/opt/cni/bin:rshared,rbind
      - /run/containerd/containerd.sock:/run/containerd/containerd.sock
    mounts:
      - type: bind
        source: /sys/fs/cgroup
        destination: /sys/fs/cgroup
        options: ["rw","rbind","rshared","nosuid","noexec","nodev","relatime"]
    capabilities:
      - all
    rootfsPropagation: shared
    pid: host
    runtime:
      cgroups:
        - systemreserved
        - podruntime
        - kubepods
      mkdir:
        - /var/lib/kubeadm
        - /var/lib/cni/conf
        - /var/lib/cni/bin
        - /var/lib/kubelet-plugins
        - /var/lib/nfs/statd/sm
      mounts:
        - type: bind
          source: /var/lib/cni/bin
          destination: /opt/cni/bin
          options: ["rw","bind"]
        - type: bind
          source: /var/lib/cni/conf
          destination: /etc/cni/net.d
          options: ["rw","bind"]
files:
  - path: etc/linuxkit.yml
    metadata: yaml
  - path: etc/kubernetes
    symlink: "/var/lib/kubeadm"
  - path: etc/os-release
    contents: |
      PRETTY_NAME="Kubernit Project"
  - path: usr/libexec/kubernetes/kubelet-plugins
    symlink: "/var/lib/kubelet-plugins"
  - path: etc/kubeadm/
    directory: true
  - path: etc/sysctl.d/01-kubernetes.conf
    contents: |
      net.ipv4.ip_forward = 1
  - path: etc/cni/net.d
    directory: true
  - path: opt/cni/bin
    directory: true
  - path: root/.ssh/authorized_keys
    source: ~/.ssh/id_babylon.pub
    mode: "0600"
    optional: true
  - path: run/config/kubeadm
    directory: true
  - path: etc/kubeadm/join
    contents: ""
  - path: etc/kubeadm/kubeadm.yaml
    source: config/worker/kubeadm.yaml
  - path: etc/kubelet.sh.conf
    contents: |
      KUBELET_ARGS="--node-ip=192.168.58.11 --node-labels=node-role.kubernetes.io/worker"
